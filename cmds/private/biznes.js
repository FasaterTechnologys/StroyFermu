module.exports = {
  tag: ["–ë–∏–∑–Ω–µ—Å"],
  button: ["biznes"],
  func: async(context, { vk, _user, game, biznes, util , db, toplv}) => {
    
    if(_user.biznes != -1) {
      if(Number(_user.strmat) == 0) context.send("‚ùó –ù–µ—Ç—É —Å—Ç—Ä–æ–π –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤! –ë–∏–∑–Ω–µ—Å –Ω–µ –ø—Ä–∏–Ω–æ—Å–∏—Ç –¥–æ—Ö–æ–¥.")
      context.send({message:`–ü—Ä–∏–≤–µ—Ç ${_user.name}!\nüè¢ –¢–≤–æ–π –±–∏–∑–Ω–µ—Å "${biznes[_user.biznes].name}".\nüí≥ –ë–∞–ª–∞–Ω—Å –±–∏–∑–Ω–µ—Å–∞: $${util.number_format(_user.doxod)}.\nüöö –ó–∞–ø–∞—Å —Ç–æ–ø–ª–∏–≤–∞: üõ¢${_user.toplv == -1 ? "–ù–µ—Ç—É." : `${_user.toplvdoxod} | $${toplv[_user.toplv].doxod}/—á.`}\nüíµ –ß–∏—Å—Ç—ã–π –¥–æ—Ö–æ–¥: $${util.number_format(Number(biznes[_user.biznes].doxod))}/–º–∏–Ω.\nüå≤ –°—Ç—Ä–æ–π–º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥–µ: ${util.number_format(Number(_user.strmat))}/${util.number_format(Number(biznes[_user.biznes].stm) / 2)}.`, attachment: biznes[_user.biznes].attachmnent, keyboard: game.getBiznes()})
    }else{
    db.get().collection('users').updateOne({ uid: _user.uid }, { $set: { menu: 1, } });
    let str = ""
    for(let i = 0; i < biznes.length; i++){
      str += `${i + 1} ‚Ä¢  –ë–∏–∑–Ω–µ—Å: ${biznes[i].name}
–î–æ—Ö–æ–¥: $${util.number_format(biznes[i].doxod)}/–º–∏–Ω,
–ó–∞—Ç—Ä–∞—Ç–∞ —Ç–æ–ø–ª–∏–≤–∞: ${biznes[i].toplv}üõ¢
----------------
–°—Ç–æ–∏–º–æ—Å—Ç—å: $${util.number_format(biznes[i].stm)}
\n\n\n
`
    }
    context.send({ message:`
–ë–∏–∑–Ω–µ—Å—ã:

${str}

–ó–∞–ø–æ–º–Ω–∏! –ï—Å–ª–∏ –Ω–µ –±—É–¥–µ—Ç —Ç–æ–ø–ª–∏–≤–∞ —Ç–æ –±–∏–∑–Ω–µ—Å –Ω–µ –±—É–¥–µ—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –ø—Ä–∏–±—ã–ª—å!
`, keyboard: game.getFr() });
   
  let id = await context.question(`–í—ã–±–µ—Ä–∏ –±–∏–∑–Ω–µ—Å:`);
  db.get().collection('users').updateOne({ uid: context.peerId }, { $set: { menu: 0 } });
  if(id.toLowerCase() == "–Ω–∞–∑–∞–¥") return
  if(biznes[Number(id) -1] == undefined ) return context.send({ message:"–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é", keyboard: game.getPrivateKeyboard() })
  if(Number(biznes[Number(id)-1].stm) > _user.balance ) return context.send({message: `–¢–µ–±–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç $${util.number_format(Number(biznes[Number(id)-1].stm) - _user.balance)}\n–ó–∞—Ä–∞–±–æ—Ç–∞–π –∏—Ö –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –†–∞–±–æ—Ç–∞`, keyboard: game.getPrivateKeyboard()})
  context.send({message:`–¢—ã —Ç–æ—á–Ω–æ —Ö–æ—á–µ—à—å –∫—É–ø–∏—Ç—å –±–∏–∑–Ω–µ—Å "${biznes[Number(id)-1].name}" –∑–∞ $${util.number_format(biznes[Number(id)-1].stm)}?`, attachment: biznes[Number(id)-1].attachmnent, keyboard: game.getTrue("–±–∏–∑–Ω–µ—Å")})
  let truep = await context.question(`–ù–∞–∂–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å:`);
  if(truep.toLowerCase() == "–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"){
    db.get().collection('users').updateOne({ uid: context.peerId }, { $set: { biznes: (Number(id) -1), balance: _user.balance - Number(biznes[Number(id)-1].stm) } });
  return context.send({ message:`–í—ã –∫—É–ø–∏–ª–∏ –±–∏–∑–Ω–µ—Å ${biznes[Number(id)-1].name} –∑–∞ $${util.number_format(biznes[Number(id)-1].stm)}`, keyboard: game.getPrivateKeyboard() })
  }
	 }
  } 
};

