module.exports = {
    tag: ["–ë–∏–∑–Ω–µ—Å"],
    button: ["ferm"],
    func: async(context, { vk, _user, game, ferm, util , db, toplv}) => {
      
      if(_user.ferm != -1) {
        context.send({message:`–ü—Ä–∏–≤–µ—Ç ${_user.name}!\nüïπ –¢–≤–æ—è —Ñ–µ—Ä–º–∞: "${ferm[_user.ferm].name}".\nüí≥ –ë–∞–ª–∞–Ω—Å –∫–æ—à–µ–ª—å–∫–∞: ${_user.stc} STC | ${ferm[_user.ferm].doxod}/–º–∏–Ω.\n‚ö° –ó–∞–ø–∞—Å —ç–Ω–µ—Ä–≥–∏–∏: ${_user.toplv == -1 ? "–ù–µ—Ç—É" : `${_user.toplvdoxod} | ${toplv[_user.toplv].doxod} / —á`}.`, attachment: ferm[_user.ferm].attachmnent, keyboard: game.getFerma()})
      }else{
      db.get().collection('users').updateOne({ uid: _user.uid }, { $set: { menu: 1, } });
      let str = ""
      for(let i = 0; i < ferm.length; i++){
        str += `${i + 1} ‚Ä¢  –§–µ—Ä–º–∞: ${ferm[i].name}
–î–æ—Ö–æ–¥: ${ferm[i].doxod} STC/–º–∏–Ω,
–ó–∞—Ç—Ä–∞—Ç–∞ —ç–Ω–µ—Ä–≥–∏–∏: ${ferm[i].energ}
----------------
–°—Ç–æ–∏–º–æ—Å—Ç—å: $${util.number_format(ferm[i].stm)}
\n\n\n
`
      }
      context.send({ message:`
–§–µ—Ä–º—ã:
  
${str}
–ó–∞–ø–æ–º–Ω–∏! –ï—Å–ª–∏ –Ω–µ –±—É–¥–µ—Ç —ç–Ω–µ—Ä–≥–∏–∏ —Ç–æ –±–∏–∑–Ω–µ—Å –Ω–µ –±—É–¥–µ—Ç –ø—Ä–∏–Ω–æ—Å–∏—Ç—å –ø—Ä–∏–±—ã–ª—å!
  `, keyboard: game.getFi() });
     
    let id = await context.question(`–í—ã–±–µ—Ä–∏ —Ñ–µ—Ä–º—É:`);
    db.get().collection('users').updateOne({ uid: context.peerId }, { $set: { menu: 0 } });
    if(id.toLowerCase() == "–Ω–∞–∑–∞–¥") return
    if(ferm[Number(id) -1] == undefined )  return context.send({ message:"–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é", keyboard: game.getPrivateKeyboard() })
    if(Number(ferm[Number(id)-1].stm) > _user.balance ) return context.send({message: `–¢–µ–±–µ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç $${util.number_format(Number(ferm[Number(id)-1].stm) - _user.balance)}\n–ó–∞—Ä–∞–±–æ—Ç–∞–π –∏—Ö –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –†–∞–±–æ—Ç–∞`, keyboard: game.getPrivateKeyboard()})
    context.send({message:`–¢—ã —Ç–æ—á–Ω–æ —Ö–æ—á–µ—à—å –∫—É–ø–∏—Ç—å —Ñ–µ—Ä–º—É "${ferm[Number(id)-1].name}" –∑–∞ $${util.number_format(ferm[Number(id)-1].stm)}?`, attachment: ferm[Number(id)-1].attachmnent, keyboard: game.getTrue("—Ñ–µ—Ä–º–∞")})
    let truep = await context.question(`–ù–∞–∂–º–∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å:`);
    if(truep.toLowerCase() == "–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"){
      db.get().collection('users').updateOne({ uid: context.peerId }, { $set: { ferm: (Number(id) -1), balance: _user.balance - Number(ferm[Number(id)-1].stm) } });
    return context.send({ message:`–í—ã –∫—É–ø–∏–ª–∏ —Ñ–µ—Ä–º—É ${ferm[Number(id)-1].name} –∑–∞ $${util.number_format(ferm[Number(id)-1].stm)}`, keyboard: game.getPrivateKeyboard() })
    }
       }
    } 
  };
  
  