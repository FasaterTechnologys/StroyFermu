module.exports = {
  tag: ["–ü—Ä–æ–¥–∞—Ç—å —Å—Ç–∞–Ω—Ü–∏—é"],
  button: ["electro"],
  func: async(context, { vk, _user, game, energ, util , db}) => {
    
    if(_user.energ != -1) {
      let id = await context.question({message: `‚ùì –¢—ã —Ç–æ—á–Ω–æ —Ö–æ—á–µ—à—å –ø—Ä–æ–¥–∞—Ç—å c—Ç–∞–Ω—Ü–∏—é:\nüè¢ "${energ[_user.energ].name}"\nüíµ –ó–∞ –Ω–µ—ë —Ç—ã –ø–æ–ª—É—á–∏—à—å $${util.number_format(energ[_user.energ].stm * 60 / 100)}`, keyboard: game.getTrue("–ù–∞–∑–∞–¥")});
      if(id.toLowerCase() != "–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å") return
      db.get().collection('users').updateOne({ uid: context.peerId }, { $set: { energ: -1 } , $inc: { balance: energ[_user.energ].stm * 60 / 100 } });
      context.send({message: `–¢—ã –ø—Ä–æ–¥–∞–ª c—Ç–∞–Ω—Ü–∏—é "${energ[_user.energ].name}".\nüí≥ –¢–µ–ø–µ—Ä—å —Ç–≤–æ–π –±–∞–ª–∞–Ω—Å: $${util.number_format(_user.balance +  energ[_user.energ].stm * 60 / 100) }`, keyboard: game.getPrivateKeyboard()})
    }
  } 
};

